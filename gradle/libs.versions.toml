[versions]
minecraft = "1.21"
architectury-api = "13.0.2"
fabric-loader = "0.16.5"
fabric-api = "0.102.0+1.21"
neoforge = "21.0.167"
parchment-mappings = "2024.07.28"

kotlin = "2.0.20"
kotlin-logging = "7.0.0"
ktoml = "0.5.1"
ktor = "3.0.0-rc-1"

architectury-plugin = "3.4.159"
architectury-loom = "1.7.413"
shadow = "8.3.2"

[libraries]
minecraft = { module = "net.minecraft:minecraft", version.ref = "minecraft" }
fabric-loader = { module = "net.fabricmc:fabric-loader", version.ref = "fabric-loader" }
fabric-api = { module = "net.fabricmc.fabric-api:fabric-api", version.ref = "fabric-api" }
neoforge = { module = "net.neoforged:neoforge", version.ref = "neoforge" }
architectury-api = { module = "dev.architectury:architectury", version.ref = "architectury-api" }
architectury-api-neoforge = { module = "dev.architectury:architectury-neoforge", version.ref = "architectury-api" }
architectury-api-fabric = { module = "dev.architectury:architectury-fabric", version.ref = "architectury-api" }
parchment-mappings = { module = "org.parchmentmc.data:parchment-1.21", version.ref = "parchment-mappings" }

kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlin-logging" }
ktoml-core = { module = "com.akuleshov7:ktoml-core", version.ref = "ktoml" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version = "1.9.0" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.7.3" }

#ktor
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-jetty = { module = "io.ktor:ktor-server-jetty-jakarta-jvm", version.ref = "ktor" }
ktor-server-tomcat = { module = "io.ktor:ktor-server-tomcat-jakarta-jvm", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# plugins as libraries, used in convetion plugins
architectury-plugin = { module = "architectury-plugin:architectury-plugin.gradle.plugin", version.ref = "architectury-plugin" }
architectury-loom = { module = "dev.architectury.loom:dev.architectury.loom.gradle.plugin", version.ref = "architectury-loom" }
shadow = { module = "com.gradleup.shadow:shadow-gradle-plugin", version.ref = "shadow" }

[bundles]

[plugins]
architectury-plugin = { id = "architectury-plugin", version.ref = "architectury-plugin" }
architectury-loom = { id = "dev.architectury.loom", version.ref = "architectury-loom" }
shadow = { id = "com.gradleup.shadow", version.ref = "shadow" }

kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
